# Написать функцию to_roman, которая принимает целое число, а возвращает строку,
# отображающую это число римскими цифрами. Например, на вход подается 6, возвращается - "VI";
# на вход подается 23, возвращается "XXIII". Входные данные должны быть в диапазоне от 1 до 5000,
# если подается число не из этого диапазона, или не число, то должны выбрасываться ошибка типа
# NonValidInput. Этот тип ошибки надо создать отдельно. Также необходимо в папке с файлом,
# содержащим вашу функцию, создать файл tests.py, внутри которой необходимо определить тесты для
# вашей функции. Тесты должны покрывать все возможное поведение функции, включая порождения ошибки
# при некорректных входных данных.

class Error(Exception):
    pass

class RomanNumber:
    __roman_numbers = {'M': 1000, 'CM': 900, 'D': 500, 'CD': 400,
                       'C': 100, 'XC': 90, 'L': 50, 'XL': 40,
                       'X': 10, 'IX': 9, 'V': 5, 'IV': 4, 'I': 1}
    max_number = 5000

    def to_roman(self, number):
        roman = ""
        if isinstance(number, int):
            if 1 <= number <= self.max_number:
                for key, value in self.__roman_numbers.items():
                    while number >= value:
                        roman += key
                        number -= value
                return roman
        raise Error("NonValidInput")

